1. 우선 포인터의 개념은 무엇인가에 대해서 알아야함.
C 언어의 포인터(Pointer)는 다른 변수의 메모리 주소를 저장하는 변수. 
즉, 포인터 변수는 메모리 내의 다른 변수나 함수를 가리키는 변수로. 
이는 메모리의 특정 위치를 가리키는 주소 값을 저장한다.

2. 그럼 자바에서 포인터 개념은 무엇인가?
사실 자바에선 포인터라는 개념을 사용하지 않지만, 유사한 개념이 몇가지 있다.

(1)참조 타입 (Reference Types): 자바에서 객체는 참조 타입으로 이루어짐. 
객체를 생성하고 변수에 할당하면, 변수는 실제 객체를 직접 가리키는 것이 아니라 객체의 참조를 가지고 있습니다. 
이것은 포인터의 개념과 유사합니다. 객체의 속성이나 메소드에 접근할 때 이 참조를 이용합니다.

ex)
SomeObject obj = new SomeObject();

(2)배열 (Arrays): 자바의 배열은 객체입니다.
따라서 배열 변수는 배열을 직접 포인팅하지 않고 배열의 참조를 가집니다.

ex)
int[] arr = new int[10];

(3)메소드 호출 시 참조 전달 (Pass-by-Reference in Method Calls): 
자바에서 메소드에 인자를 전달할 때는 값에 의한 전달(pass-by-value)이지만, 
참조 타입의 경우 참조가 복사되어 전달됩니다. 이것은 메소드 내에서 객체의 내용을 변경할 수 있음을 의미합니다.

ex)
public void modifyArray(int[] array) {
    array[0] = 10;
}

int[] arr = new int[]{1, 2, 3};
modifyArray(arr);
// 이제 arr은 {10, 2, 3}을 가리킵니다.



cf)
1)생성자는 객체를 초기화하는 특별한 종류의 메소드. 
자바에서 객체를 생성할 때는 해당 클래스의 생성자를 호출하여 객체를 초기화합니다.
2)변수는 값 또는 객체를 저장하는 공간을 가리키는 이름. 
참조 변수는 객체를 가리키는 변수입니다. 
객체 자체는 메모리에서 실제로 할당된 인스턴스입니다.
인스턴스란 클래스의 실체화된 형태로, 클래스를 기반으로 생성된 객체를 나타낸다. 

ex)
SomeObject obj = new SomeObject(); 에서 오른쪽 SomeObject();가 생성자
왼쪽의 SomeObject 는 클래스이며 obj 는 변수 그 중에서도 참조 변수임


