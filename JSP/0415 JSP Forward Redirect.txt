Forward 
Forward 메서드는 웹 애플리케이션의 한 서블릿에서 다른 리소스로 요청을 전달하며,
이 리소스는 다른 서블릿, JSP 페이지 또는 HTML 파일이 될 수 있음 브라우저로 요청을 전달하는 것이 아니라 
서버 내 다른 리소스를 호출 


cf) 서블릿?
서버측 구성요소로써 클라이언트의 요청을 받아들이고
이를 처리한 후 그 결과를 클라이언트에게 반환함
일반적으로 HTML을 생성하거나 데이터를 처리하는 등 작업을 수행
웹서버와 함께 동작하여 동적인 웹 페이지를 생성함 여기서 동적인 웹페이지는 사용자의 요청에 따라 생성되는 콘텐츠로 구성되어있음

Redirect 
Redirect 는 요청을 웹 브라우저에게 전달하여 새로 요청하게 만듬 덕분에 forward 와 달리
두번 통신이 일어나 속도가 느리다. 그러나 외부에 있는 다른서버나 혹은 같은 서버에서도 콘텍스트가 다른 url에 요청을 redirect 할 수 있음


해당 링크 그림을 참고하면 좋다
https://dev-handbook.tistory.com/35

01. 선언문
JSP 에서 사용될 변수나 메소드를 선언할 수 있는 영역의 요소
<%! %> 블럭 사이에 작성하며, 선언문에 선언된 변수를 멤버변수(인스턴스 변수 = 객체 변수)

<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
<!DOCTYPE html>
<html>
<head>
<meta charset="UTF-8">
<title>Insert title here</title>
</head>
<body>

<!-- 
	선언문(서블릿으로 변환되는 자바파일의 속성/기능(함수) 추가)
 -->
 	<%!
 		String name = "Hong gil dong";
 		public String testFunc(){
 			System.out.println("선언문 TEST");
 			return "HELLO WORLD";
 		}
 	%>
 	
<!--
		표현식(HTML 로 표시/표현할 때 사용되는 코드)
  -->
 	<%=name %><br>
 	<%=testFunc() %><br>

<!--
		F5 새로고침 할 때마다 카운트가 올라감.  
  -->
<%!
	int a = 0;
	public int countUp(){
		a++;
		return a;
	}
	
%>

a: <%=countUp() %> <br/>

<%!
	// x 
/* 	
for(int i=0; i<10; i++){
		System.out.print("HELLO WORDL");
	} 
*/

%>

 	

</body>
</html>
