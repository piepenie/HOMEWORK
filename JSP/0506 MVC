Model1(구형 웹개발 모델)
JSP가 Presentaion Layer 에서 일어나는 모든일을 담당
JSP가 중요한 역할.
유저 화면. 

구조가 단순함 빠르게 프로그램을 작성할 수 있다.
다만, 단점이 개발자들의 역할 분담이 안됨
페이지수가 많아지고 구현된 기능끼리 연관관계를 파악하는
가독성이 현저히 저하됨.

많은 개발자들이 참여한 프로젝트일 수록
유지보수가 어려움.

Model2(현재 웹개발 모델)

모델2는 view에서 모든 자바 코드를 제거함.(역할 분담을 위해)
MVC 모델
웹 Container 에서 Control Servlet, 
View Jsp , Model JavaBeans 로 역할을 나눈것
역할을 분리시켜서 나눠 처리함

MVC
응용프로그램 로직 레이어
Model 부분으로 응용 프로그램의 데이터를 관리하거나
비즈니스 로직을 처리

프레젠테이션 레이어
View 에 해당되는 부분으로 웹 페이지의 형태 및 디자인 결정

컨트롤 레이어
Control 에 해당되는 부분으로 응용프로그램의 제어를 관리

Model 기능
응용프로그램의 데이터를 관리하거나 비지니스 로직
순수한 코드 알고리즘 클라이언트 요청에 의한 업무 로직을 담당
정보의 구조와 서로간의 관계를 표현
DB에서 관리하는 정보와 직접 관련되어있는 경우가 많음
비지니스 객체들로 구성됨
애플리케이션 기능의 중요한 부분 포함하고 상태를 가지고있음
비지니스 로직을 제어하는 규칙을 가짐
DB의 데이터 지속성을 관리함

View 
모델에 의해 처리된 데이터를 적절한 모양으로 디스 플레이함
보통 JSP로 구성함

Controller 
Mvc 패턴 전체의 연결 고리
비즈니스 로직과 화면 요소가 없음
Servlet 클래스로 작성함



