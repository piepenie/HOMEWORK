JSTL
자바코드를 html태그형식으로 간편하게 사용하기 위해 나온 라이브러리

@ComponentScan
특정 지점부터 등록하고 싶은 컴포넌트가 있다고 찾으라고 알려주는 역할

@Component
빈으로 등록하고 싶은 클래스

@Controller 어노테이션 안에는
@Component가 내부적으로 이미 등록 되어있기에,
Controller를 명시하는 것만으로도 바로 Spring IoC 컨테이너의 Bean으로 등록됨

Jackson 
JSON 파일을 사용하기 위한 라이브러리 

JSON 
일반적인 객체 형식과 비슷하지만, JSON은 통신 등을 위해 데이터를 가볍게 만든 문자데이터!

undefined는 사용 불가능하고 큰따옴표만 허용되니까 주의!

API 와 Endpoint의 차이 한 줄 정리

API가 두 시스템(어플리케이션)이 상호작용할 수 있게 하는 프로토콜의 총집합이라면,

ENDPOINT는 API가 서버에서 리소스에 접근할 수 있도록 가능하게 하는 URL이라 할 수 있겠다.

getter & setter 

스레드    : 작업 실행 단위(실행 흐름 단위)
동기      : 미리 정해놓은 약속대로 처리하는 작업(절차흐름대로 처리-단일스레드 단위)
비동기    : 정해지 약속대로 처리하는게 아니라 필요한 상황에 따라 다르게 처리(실행흐름분리-스레드를 따로 형성)

End Point 란 
어디(End-point)에 요청할 것인지 결정하는거 URL 관련 키워드

GET , POST 
데이터를 전송하기 위해 GET, 전송 받기 위해 POST 방식

MODEL
Model 의 역할은 컨트롤러에서 뷰로 데이터를 전달하는 데 사용함.

//LINUX 
Bridge = 호스트PC(메인PC) 와 가상머신내 설치된 GUEST PC의 랜 카드를 동일하게 사용하겠다
외부 > 내부 통신 가능
내부 > 외부 통신 가능

NAT = VMWARE 에 NAT 이란 랜카드를 만들어서 이 곳을 통해 HOST GUEST PC 랜카드를 연결
내부 > 외부 가능
외부 > 내부 불가능

HOST ONLY 
내부 > 외부 불가능
외부 > 내부 불가능
단, 내부 > 내부 에서 통신가능

//@Valid 기능(유효성 검사)에 대한 GPT 답
유효성 검사는 사용자가 입력한 데이터가 애플리케이션의 요구사항을 충족하는지 확인하는 과정입니다. 
이를 통해 데이터가 유효한지, 형식이 맞는지, 필수 값이 입력되었는지 등을 체크할 수 있습니다. Spring Boot에서는 주로 JSR-303/JSR-380 애노테이션을 사용하여 유효성 검사를 수행합니다. 
이러한 유효성 검사 애노테이션은 javax.validation.constraints 패키지에 속합니다.

주요 유효성 검사 애노테이션
@NotNull: 값이 null이 아니어야 합니다.
@NotEmpty: 문자열이 null이 아니고 비어 있지 않아야 합니다.
@NotBlank: 문자열이 null이 아니고, 비어 있지 않으며 공백만으로 이루어져 있지 않아야 합니다.
@Size: 문자열, 컬렉션 등의 크기를 검사합니다.
@Min: 숫자가 지정된 최소값 이상이어야 합니다.
@Max: 숫자가 지정된 최대값 이하여야 합니다.
@Email: 유효한 이메일 형식이어야 합니다.
@Pattern: 지정된 정규 표현식과 일치해야 합니다.

추상화란 불필요한 부분을 제거함으로써 필요한 핵심만을 나타낸 것
목적 : 복잡성을 제거 하기 위해서

다양성 : 다양한 형태를 가진 것, 하나 타입으로 여러 객체를 참조하는 참조 : 변수가 객체를 가르키는 뜻
캡슐화란 객체 내부의 세부사항을 외부로부터 감추는 것
목적 : 인터페이스만 공개해서 변경하기 쉬운 코드를 만들기 위함

상속은 부모로부터 물려받는 것

SOLID
적절한 객체에게 적절한 책임을 할당하여 서로 메시지를 주고 받으며 협력하도록 하는 것을 
객체지향이라고 정의
소프트웨어의 복잡도를 낮추기 위해서
비슷한 것 높은 응집도 다른 것들이랑은 분리시키는 게 낮은 결합도




참고 출처(Query string과 Path Variable)
https://velog.io/@jcinsh/Query-string-path-variable

참고 출처(Query parameter, Query String vs Path Variable)
https://i-ten.tistory.com/243

참고 출처(API 와 Endpoint)
https://blog.naver.com/ghdalswl77/222401162545

참고 출처(어노테이션 모음)
https://sddev.tistory.com/225
